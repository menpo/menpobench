#!/usr/bin/env python
# encoding: utf-8
"""The Menpo Deformable Model benchmarking suite


<experiment_config> can be either the name of a predefined experiment, or the
path to a .yaml experiment configuration file.

Usage:
  menpobench <experiment_config>
  menpobench --list
  menpobench (-h | --help)
  menpobench --version

Options:
  --list     List all available predefined datasets, methods, and experiments.
  -h --help  Show this screen.
  --version  Show version.
"""
import menpobench
from menpobench import (invoke_benchmark, configure_cache_dir,
                        configure_matlab_bin_path)
from docopt import docopt
from menpobench.method.matlab.base import resolve_matlab_bin_path


def invoke_benchmark_with_config_prompts(experiment_name):
    try:
        # TODO: Lazily find Matlab here - this should be fired off by YAML validation
        resolve_matlab_bin_path(verbose=True)
        invoke_benchmark(experiment_name)
    except KeyError as e:
        if e.message == 'cache_dir':
            print('Welcome to menpobench. To start, you will need to choose a directory')
            print('that menpobench can use as a cache.')
            print('This directory will be managed by menpobench to store datasets and')
            print('temporary results. Anticipate it to get quite large (~20GB).')
            cache_dir = raw_input('Please enter cache directory: ')
            configure_cache_dir(cache_dir)
            # now we have a cache dir, re-run
            invoke_benchmark_with_config_prompts(experiment_name)
        elif e.message == 'matlab_bin_path':
            print('To use a Matlab method, you must have installed and '
                  'configured Matlab correctly.')
            print('Despite attempting to automatically locate Matlab, '
                  'menpobench was unable to find the Matlab executable.')
            print('Therefore, please specify the path to the Matlab executable, '
                  "usually found in the 'bin' directory")
            matlab_bin_dir = raw_input('Please enter Matlab executable path: ')
            configure_matlab_bin_path(matlab_bin_dir)
            # now we have a Matlab bin path, re-run
            invoke_benchmark_with_config_prompts(experiment_name)
        else:
            print('Unexpected missing config value: {}'.format(e))
            exit(1)
    except ValueError as e:
        print('ERROR: {}'.format(e.message))
        exit(1)


def list_all_predefined():
    from menpobench.experiment import list_predefined_experiments
    from menpobench.dataset import list_predefined_datasets
    from menpobench.method import (list_predefined_methods,
                                   list_predefined_untrainable_methods)
    import yaml
    print(yaml.dump({'datasets': list_predefined_datasets(),
                     'methods': list_predefined_methods(),
                     'untrainable_methods': list_predefined_untrainable_methods(),
                     'experiments': list_predefined_experiments()
                     }, default_flow_style=False))


if __name__ == '__main__':
    args = docopt(__doc__,
                  version='menpobench v{}'.format(menpobench.__version__))
    if args['--list']:
        list_all_predefined()
    else:
        invoke_benchmark_with_config_prompts(args['<experiment_config>'])
